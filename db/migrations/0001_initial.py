# Generated by Django 4.1.2 on 2022-10-24 20:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(choices=[(0, 'int'), (1, 'real'), (2, 'char'), (3, 'str'), (4, 'html'), (5, 'strInvl')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Row',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('columns', models.ManyToManyField(related_name='columns', to='db.column')),
                ('rows', models.ManyToManyField(related_name='rows', to='db.row')),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('databases', models.ManyToManyField(related_name='databases', to='db.database')),
            ],
        ),
        migrations.AddField(
            model_name='database',
            name='tables',
            field=models.ManyToManyField(related_name='tables', to='db.table'),
        ),
    ]
